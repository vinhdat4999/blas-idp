apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Chart.Name }}-service-config
data:
  application.yaml: |
    server:
      port: {{ .Values.service.targetPort }}
    spring:
      profiles:
        active: {{ index .Values "service-config" "spring" "profile" }}
      datasource:
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: ${mysql-url}
        username: ${mysql-username}
        password: ${mysql-password}
      data:
        mongodb:
          uri: ${mongodb-url}
      jpa:
        hibernate:
          ddl-auto: none
        open-in-view: false
        show-sql: false
        properties:
          hibernate:
            dialect: org.hibernate.dialect.MySQL8Dialect
      security:
        oauth2:
          client:
            registration:
              google:
                clientId: ${google-client-id}
                clientSecret: ${google-client-secret}
                scope:
                  - email
                  - profile
              facebook:
                clientId: ${facebook-client-id}
                clientSecret: ${facebook-client-secret}
                scope:
                  - email
                  - public_profile
    management:
      endpoints:
        web:
          exposure:
            include: "*"
      endpoint:
        health:
          probes:
            enabled: true
    blas:
      aliasBlasPrivateKey: blasSecretKey
      certificate: BlasSecretKey.p12
      service:
        serviceName: {{ .Chart.Name }}
      gate-interceptor:
        enableLogRequest: true
        enableLogLocalRequest: false
      blas-service-support:
        throughServiceSupport: true
        endpointCheckMaintenance: http://blas-service-support.{{ .Values.aksNamespace }}.svc.cluster.local:8084/maintenance/check
      blas-idp:
        isSendEmailAlert: true
        jwt:
          timeToExpired: 8640000 #100 days
      hazelcast:
        aksNamespace: {{ .Values.aksNamespace }}
        hazelcastService: {{ .Values.hazelcastService }}

    logging:
      level:
{{- range $key, $value := index .Values "service-config" "logging" "level" }}
        {{ $key }}: {{ $value }}
{{- end }}

  hazelcast-client.yaml: |-
    hazelcast-client:
      network:
        kubernetes:
          enabled: {{ index .Values "service-config" "hazelcast-client" "network" "kubernetes" "enabled" }}

  bootstrap.yaml: |-
    spring:
      cloud:
        vault:
          authentication: TOKEN
          token: {{ index .Values "service-config" "vault" "token" }}
          uri: {{ index .Values "service-config" "vault" "uri" }}
          namespace: {{ index .Values "service-config" "vault" "namespace" }}
          kv:
            backend: {{ index .Values "service-config" "vault" "kv" "backend" }}
            application-name: {{ index .Values "service-config" "vault" "kv" "application-name" }}
            default-context: {{ index .Values "service-config" "vault" "kv" "default-context" }}
          enabled: {{ index .Values "service-config" "vault" "enabled" }}
          connection-timeout: {{ index .Values "service-config" "vault" "connection-timeout" }}
          read-timeout: {{ index .Values "service-config" "vault" "read-timeout" }}
