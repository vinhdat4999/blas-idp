apiVersion: v1
kind: ConfigMap
metadata:
  name: {{.Chart.Name}}-service-config
data:
  application.yaml: |
    server:
      port: {{ .Values.service.targetPort }}
    spring:
      profiles:
        active: {{ index .Values "service-config" "spring" "profile" }}
      datasource:
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://mysql-182243-0.cloudclusters.net:10013/blas
        username: admin
        password: 0DUTfSSC
      data:
        mongodb:
          uri: mongodb://localhost:27017/blas # This is default connection string applied when can not retrieve the protection one in database
      jpa:
        hibernate:
          ddl-auto: none
        open-in-view: false
        show-sql: false
        properties:
          hibernate:
            dialect: org.hibernate.dialect.MySQL8Dialect
      security:
        oauth2:
          client:
            registration:
              google:
                clientId: 907490346247-lg1pq3fd2j79jl6gd0o54btqnm25l203.apps.googleusercontent.com
                clientSecret: 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
                scope:
                  - email
                  - profile
              facebook:
                clientId: 1483809445791923
                clientSecret: cf95985be987f1ac3459bb4710e32fec
                scope:
                  - email
                  - public_profile
    management:
      endpoints:
        web:
          exposure:
            include: "*"
      endpoint:
        health:
          probes:
            enabled: true
    blas:
      aliasBlasPrivateKey: blasSecretKey
      certificate: BlasSecretKey.p12
      service:
        serviceName: {{.Chart.Name}}
      gate-interceptor:
        enableLogRequest: true
        enableLogLocalRequest: false
      blas-service-support:
        throughServiceSupport: true
        endpointCheckMaintenance: http://blas-service-support.{{ .Values.aksNamespace }}.svc.cluster.local/maintenance/check
      blas-idp:
        isSendEmailAlert: true
        jwt:
          timeToExpired: 8640000 #100 days
          timeToExpiredInternalToken: 120 #2 minutes
      hazelcast:
        aksNamespace: {{.Values.aksNamespace}}
        hazelcastService: {{.Values.hazelcastService}}

    logging:
      level:
{{- range $key, $value := index .Values "service-config" "logging" "level" }}
        {{$key}}: {{$value}}
{{- end }}

  hazelcast-client.yaml: |-
    hazelcast-client:
      network:
        kubernetes:
          enabled: {{ index .Values "service-config" "hazelcast-client" "network" "kubernetes" "enabled" }}
